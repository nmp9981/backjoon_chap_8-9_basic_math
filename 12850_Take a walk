#include <iostream>
#include <vector>
using namespace std;
typedef long long ll;
typedef vector<vector<ll>> Matrix;

ll d;
const ll maxi = 8;
const ll mod = 1000000007;
Matrix A(maxi,vector<ll>(maxi));
Matrix ans(maxi,vector<ll>(maxi));

//입력
void input(){
    A = {
        {0,1,1,0,0,0,0,0},
        {1,0,1,1,0,0,0,0},
        {1,1,0,1,1,0,0,0},
        {0,1,1,0,1,1,0,0},
        {0,0,1,1,0,1,0,1},
        {0,0,0,1,1,0,1,0},
        {0,0,0,0,0,1,0,1},
        {0,0,0,0,1,0,1,0}
    };
    cin>>d;
}

//행렬의 곱셈
Matrix mul(Matrix p,Matrix q){
    Matrix temp(maxi,vector<ll>(maxi));
    for(int i=0;i<maxi;i++){
        for(int j=0;j<maxi;j++){
            for(int k=0;k<maxi;k++){
                temp[i][j]+=(p[i][k]*q[k][j]);
                temp[i][j]%=mod;
            }
        }
    }
    return temp;
}

//인접행렬 구하기
Matrix move(ll x){
    //재귀종료
    if(x==1){
        return A;
    }
    //다음지점
    Matrix adj,mat;
    mat = move(x/2);
    if(x%2==0){
        adj = mul(mat,mat);
    }else{
        adj = mul(mul(mat,mat),A);
    }
    return adj;
}

int main(){
    input();//입력
    ans = move(d);//인접행렬 구하기
    cout<<ans[0][0];//출력
    return 0;
}
