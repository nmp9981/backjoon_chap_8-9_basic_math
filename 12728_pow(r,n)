#include <iostream>
#include <vector>
#include <cstring>
using namespace std;
typedef long long ll;
typedef vector<vector<ll>> Matrix;

ll n,t,ans;
const int r = 2;
const int mod = 1000;
Matrix M(r,vector<ll>(r));
Matrix res(r,vector<ll>(r));

//행렬 곱셈
Matrix mul(Matrix p,Matrix q){
    Matrix temp(r,vector<ll>(r));
    for(int i=0;i<r;i++){
        for(int j=0;j<r;j++){
            for(int k=0;k<r;k++){
                temp[i][j]+=(p[i][k]*q[k][j]);
            }
            temp[i][j]%=mod;
        }
    }
    return temp;
}

//행렬의 거듭제곱
Matrix power(ll x){
    if(x==1) return M;
    //분할
    Matrix f,adj;
    f = power(x/2);
    if(x%2==0) adj = mul(f,f);
    else adj = mul(mul(f,f),M);
    return adj;
}

int main(){
    cin>>t;
    int cnt = 1;
    while(t--){
        cin>>n;
        //행렬 제곱
        M = {{6,-4},{1,0}};
        if(n==1) res = {{1,0},{0,1}};//단위 행렬
        else res = power(n-1);//M^n
        //모듈러 연산
        ans = (((28*res[1][0]+6*res[1][1])-1)%mod+mod)%mod;
        //출력
        string st_ans = to_string(ans);
        //3자리로 출력
        while(st_ans.size()<3){
            st_ans = "0"+st_ans;
        }
        cout<<"Case #"<<cnt<<": "<<st_ans<<"\n";
        cnt++;
    }
    return 0;
}
